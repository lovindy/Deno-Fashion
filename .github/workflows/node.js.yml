name: Next.js CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  # Application Environment Variables
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
  CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
  CLERK_WEBHOOK_SECRET: ${{ secrets.CLERK_WEBHOOK_SECRET }}
  NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
  NEXT_PUBLIC_CLERK_SIGN_UP_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
  SUPER_ADMIN_EMAIL: ${{ secrets.SUPER_ADMIN_EMAIL }}

  # Vercel Environment Variables
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  # Build Configuration
  NODE_VERSION: '20'
  BUN_VERSION: 'latest'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            ${{ github.workspace }}/.next/static
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ github.sha }}

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install dependencies
        run: bun install

      - name: Run Lint & Type Check
        run: |
          bun run lint
          bun run type-check
      - name: Run Tests
        run: bun test
        env:
          CI: true

  deploy-production:
    name: Deploy to Production
    if: github.ref == 'refs/heads/develop'
    needs: test
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install Dependencies
        run: |
          bun install
          npm install -g vercel@latest
      - name: Deploy to Vercel (Production)
        run: |
          vercel pull --yes --environment=production --token=${{ env.VERCEL_TOKEN }}
          vercel build --prod --token=${{ env.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }}
